{"ast":null,"code":"var _jsxFileName = \"/Users/henrylee/code/final-project/src/components/promise-components/PromiseWhen.js\";\nimport React from 'react';\n\nfunction PromiseWhen(props) {\n  function dateSelected(e) {\n    console.log(e.currentTarget.value);\n    props.setCalendar(e.currentTarget.value);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }, \"Select date & time for your notification\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input is-info\",\n    setCalendar: props.setCalendar,\n    value: props.calendar,\n    onClick: dateSelected,\n    type: \"date\",\n    placeholder: \"Info input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input is-info\",\n    type: \"time\",\n    placeholder: \"Info input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }))));\n}\n\nexport default PromiseWhen;","map":{"version":3,"sources":["/Users/henrylee/code/final-project/src/components/promise-components/PromiseWhen.js"],"names":["React","PromiseWhen","props","dateSelected","e","console","log","currentTarget","value","setCalendar","calendar"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,WAAT,CAAsBC,KAAtB,EAA6B;AAEzB,WAASC,YAAT,CAAuBC,CAAvB,EAA0B;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,aAAF,CAAgBC,KAA5B;AACAN,IAAAA,KAAK,CAACO,WAAN,CAAkBL,CAAC,CAACG,aAAF,CAAgBC,KAAlC;AACH;;AAED,sBACM,uDACA;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADA,eAEA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAiC,IAAA,WAAW,EAAEN,KAAK,CAACO,WAApD;AAAiE,IAAA,KAAK,EAAEP,KAAK,CAACQ,QAA9E;AAAwF,IAAA,OAAO,EAAEP,YAAjG;AAA8G,IAAA,IAAI,EAAC,MAAnH;AAA0H,IAAA,WAAW,EAAC,YAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADF,eAIM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJN,eAKE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAiC,IAAA,IAAI,EAAC,MAAtC;AAA6C,IAAA,WAAW,EAAC,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALF,CAFA,CADN;AAcH;;AAID,eAAeF,WAAf","sourcesContent":["import React from 'react'\n\nfunction PromiseWhen (props) {\n\n    function dateSelected (e) {\n        console.log(e.currentTarget.value)\n        props.setCalendar(e.currentTarget.value)\n    }\n\n    return (\n          <>\n          <p className=\"title\">Select date & time for your notification</p>\n          <div className=\"field\">\n            <div className=\"control\">\n                <input className=\"input is-info\" setCalendar={props.setCalendar} value={props.calendar} onClick={dateSelected}type=\"date\" placeholder=\"Info input\"></input>\n            </div>\n                <br></br>\n            <div className=\"control\">\n                <input className=\"input is-info\" type=\"time\" placeholder=\"Info input\"></input>\n            </div>\n         </div>\n          </>\n    )\n}\n\n\n\nexport default PromiseWhen;\n"]},"metadata":{},"sourceType":"module"}
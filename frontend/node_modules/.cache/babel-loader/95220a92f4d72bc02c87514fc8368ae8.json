{"ast":null,"code":"var _jsxFileName = \"/Users/henrylee/code/final-project/src/components/YourPromises.js\";\nimport React, { useState } from 'react';\nimport PromiseContent from './promise-components/PromiseContent';\nimport PromiseWhen from './promise-components/PromiseWhen';\nimport PromiseWhere from './promise-components/PromiseWhere';\nimport PhoneNumber from './promise-components/PhoneNumber';\nimport AddButton from './AddButton';\n\nfunction PromiseForm() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"main-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tile is-ancestor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tile is-parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"article\", {\n    className: \"tile is-child box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PromiseContent, {\n    promise: promise,\n    setPromise: setPromise,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tile is-parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"article\", {\n    className: \"tile is-child box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PromiseWhen, {\n    date: date,\n    setDate: setDate,\n    time: time,\n    setTime: setTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tile is-parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"article\", {\n    className: \"tile is-child box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PromiseWhere, {\n    place: place,\n    setPlace: setPlace,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tile is-parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"article\", {\n    className: \"tile is-child box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PhoneNumber, {\n    phone: phone,\n    setPhone: setPhone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  })))));\n}\n\nfunction YourPromises(props) {\n  const [promise, setPromise] = useState('');\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [place, setPlace] = useState('');\n  const [phone, setPhone] = useState(''); // const [submit, setSubmit] = useState(false)\n\n  const [isValid, setIsValid] = useState(false);\n\n  function phoneValidate() {\n    if (phone === \"\") {\n      alert(\"Enter your phone number\");\n      return false;\n    } else if (phone.length < 10) {\n      alert(\"Enter 10 digits of phone number\");\n      return false;\n    } else if (isNaN(phone)) {\n      console.log(phone);\n      alert(\"Phone number has to be numbers\");\n    } else {\n      return true;\n    }\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (phoneValidate() === true) {\n      console.log(\"Button clicked\");\n      return setIsValid(true);\n    } else {\n      return setIsValid(false);\n    }\n  }\n\n  let thePromiseForm;\n  const theForm = /*#__PURE__*/React.createElement(PromiseForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 18\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, theForm);\n}\n\nexport default YourPromises;","map":{"version":3,"sources":["/Users/henrylee/code/final-project/src/components/YourPromises.js"],"names":["React","useState","PromiseContent","PromiseWhen","PromiseWhere","PhoneNumber","AddButton","PromiseForm","handleSubmit","promise","setPromise","date","setDate","time","setTime","place","setPlace","phone","setPhone","YourPromises","props","isValid","setIsValid","phoneValidate","alert","length","isNaN","console","log","e","preventDefault","thePromiseForm","theForm"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PromiseContent from './promise-components/PromiseContent';\nimport PromiseWhen from './promise-components/PromiseWhen';\nimport PromiseWhere from './promise-components/PromiseWhere';\nimport PhoneNumber from './promise-components/PhoneNumber';\nimport AddButton from './AddButton'\n\n\nfunction PromiseForm () {\n  return (\n    <>\n    <form onSubmit={handleSubmit}>\n    <section className=\"main-body\">\n      <div className=\"inputs\">\n      <br></br><br></br>\n      <div className=\"tile is-ancestor\">\n        <div className=\"tile is-parent\">\n          <article className=\"tile is-child box\">\n            <PromiseContent promise={promise} setPromise={setPromise}/>\n          </article>\n        </div>\n        <div className=\"tile is-parent\">\n          <article className=\"tile is-child box\">\n            <PromiseWhen date={date} setDate={setDate} time={time} setTime={setTime}/>\n          </article>\n        </div>\n      <div className=\"tile is-parent\">\n        <article className=\"tile is-child box\">\n            <PromiseWhere place={place} setPlace={setPlace}/>\n        </article>\n      </div>\n      <div className=\"tile is-parent\">\n          <article className=\"tile is-child box\">\n            <PhoneNumber phone={phone} setPhone={setPhone}/>\n          </article>\n        </div>\n    </div>\n      </div>\n      <br></br><br></br>\n      <div className=\"add-button\">\n      <AddButton />\n      </div>\n    </section>\n    </form>\n  </> \n  )\n}\n\nfunction YourPromises (props) {\n  const [promise, setPromise] = useState('')\n  const [date, setDate] = useState('')\n  const [time, setTime] = useState('')\n  const [place, setPlace] = useState('')\n  const [phone, setPhone] = useState('')\n  // const [submit, setSubmit] = useState(false)\n  const [isValid, setIsValid] = useState(false)\n\n  function phoneValidate () {\n    if (phone === \"\") {\n      alert(\"Enter your phone number\")\n      return false\n    } else if ((phone).length < 10){\n      alert(\"Enter 10 digits of phone number\")\n      return false\n    } else if (isNaN(phone)) {\n      console.log(phone)\n      alert(\"Phone number has to be numbers\" )\n    } else {\n      return true\n    }\n  }\n\n  function handleSubmit (e) {\n    e.preventDefault()\n    if (phoneValidate() === true) {\n    console.log(\"Button clicked\")\n      return setIsValid(true)\n    } else {\n      return setIsValid(false)\n    }\n  }\n\n  let thePromiseForm\n  const theForm =<PromiseForm />\n  \n  return (\n    <>\n    {theForm}\n    </>\n  )\n}\n\nexport default YourPromises;\n"]},"metadata":{},"sourceType":"module"}
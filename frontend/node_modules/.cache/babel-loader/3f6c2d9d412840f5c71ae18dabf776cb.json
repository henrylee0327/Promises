{"ast":null,"code":"import _slicedToArray from\"/Users/henrylee/code/final-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import PromiseContent from'./promise-components/PromiseContent';import PromiseWhen from'./promise-components/PromiseWhen';import PromiseWhere from'./promise-components/PromiseWhere';import PhoneNumber from'./promise-components/PhoneNumber';import AddButton from'./AddButton';import NextPage from'./NextPage';function PromiseForm(props){// function phoneValidate () {\n//   if (props.phone === \"\") {\n//     alert(\"Enter your phone number\")\n//     return false\n//   } else if ((props.phone).length < 10 || (props.phone).length > 10){\n//     alert(\"Enter 10 digits of phone number\")\n//     return false\n//   } else if (isNaN(props.phone)) {\n//     console.log(props.phone)\n//     alert(\"Phone number has to be numbers\")\n//   } else {\n//     return true\n//   }\n// }\nfunction handleSubmit(e){e.preventDefault();// if (phoneValidate() === true) {\n// console.log(\"Button clicked\")\n//   return props.setIsValid(true)\n// } else {\n//   return props.setIsValid(false)\n// }\nprops.setIsValid(true);}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"section\",{className:\"main-body\"},/*#__PURE__*/React.createElement(\"div\",{className:\"inputs\"},/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"tile is-ancestor\"},/*#__PURE__*/React.createElement(\"div\",{className:\"tile is-parent\"},/*#__PURE__*/React.createElement(\"article\",{className:\"tile is-child box\"},/*#__PURE__*/React.createElement(PromiseContent,{promise:props.promise,setPromise:props.setPromise}))),/*#__PURE__*/React.createElement(\"div\",{className:\"tile is-parent\"},/*#__PURE__*/React.createElement(\"article\",{className:\"tile is-child box\"},/*#__PURE__*/React.createElement(PromiseWhen,{date:props.date,setDate:props.setDate,time:props.time,setTime:props.setTime}))),/*#__PURE__*/React.createElement(\"div\",{className:\"tile is-parent\"},/*#__PURE__*/React.createElement(\"article\",{className:\"tile is-child box\"},/*#__PURE__*/React.createElement(PromiseWhere,{place:props.place,setPlace:props.setPlace}))),/*#__PURE__*/React.createElement(\"div\",{className:\"tile is-parent\"},/*#__PURE__*/React.createElement(\"article\",{className:\"tile is-child box\"},/*#__PURE__*/React.createElement(PhoneNumber,{phone:props.phone,setPhone:props.setPhone}))))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"add-button\"},/*#__PURE__*/React.createElement(AddButton,null)))));}function YourPromises(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),promise=_useState2[0],setPromise=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),date=_useState4[0],setDate=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),time=_useState6[0],setTime=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),place=_useState8[0],setPlace=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),phone=_useState10[0],setPhone=_useState10[1];// const [submit, setSubmit] = useState(false)\nvar _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),isValid=_useState12[0],setIsValid=_useState12[1];var _useState13=useState(1),_useState14=_slicedToArray(_useState13,2),count=_useState14[0],setCount=_useState14[1];// let arrayofNumbers = []\n// for (let i = 1; i < count; i++) {\n//   arrayofNumbers.push(count)\n// }\nvar thePromiseForm;var theForm=/*#__PURE__*/React.createElement(PromiseForm,{promise:promise,setPromise:setPromise,date:date,setDate:setDate,time:time,setTime:setTime,place:place,setPlace:setPlace,phone:phone,setPhone:setPhone,isValid:isValid,setIsValid:setIsValid});if(isValid===true){thePromiseForm=/*#__PURE__*/React.createElement(NextPage,{count:count,promise:promise,date:date,time:time,place:place,phone:phone,isValid:isValid});}else{thePromiseForm=theForm;}return/*#__PURE__*/React.createElement(React.Fragment,null,thePromiseForm);}export default YourPromises;","map":{"version":3,"sources":["/Users/henrylee/code/final-project/src/components/YourPromises.js"],"names":["React","useState","PromiseContent","PromiseWhen","PromiseWhere","PhoneNumber","AddButton","NextPage","PromiseForm","props","handleSubmit","e","preventDefault","setIsValid","promise","setPromise","date","setDate","time","setTime","place","setPlace","phone","setPhone","YourPromises","isValid","count","setCount","thePromiseForm","theForm"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PromiseContent from './promise-components/PromiseContent';\nimport PromiseWhen from './promise-components/PromiseWhen';\nimport PromiseWhere from './promise-components/PromiseWhere';\nimport PhoneNumber from './promise-components/PhoneNumber';\nimport AddButton from './AddButton'\nimport NextPage from './NextPage'\n\nfunction PromiseForm (props) {\n  \n  // function phoneValidate () {\n  //   if (props.phone === \"\") {\n  //     alert(\"Enter your phone number\")\n  //     return false\n  //   } else if ((props.phone).length < 10 || (props.phone).length > 10){\n  //     alert(\"Enter 10 digits of phone number\")\n  //     return false\n  //   } else if (isNaN(props.phone)) {\n  //     console.log(props.phone)\n  //     alert(\"Phone number has to be numbers\")\n  //   } else {\n  //     return true\n  //   }\n  // }\n   \n\n  function handleSubmit (e) {\n    e.preventDefault()\n    // if (phoneValidate() === true) {\n    // console.log(\"Button clicked\")\n    //   return props.setIsValid(true)\n    // } else {\n    //   return props.setIsValid(false)\n    // }\n    props.setIsValid(true)\n  }\n  return (\n    <>\n    <form onSubmit={handleSubmit}>\n    <section className=\"main-body\">\n      <div className=\"inputs\">\n      <br></br><br></br>\n      <div className=\"tile is-ancestor\">\n        <div className=\"tile is-parent\">\n          <article className=\"tile is-child box\">\n            <PromiseContent promise={props.promise} setPromise={props.setPromise}/>\n          </article>\n        </div>\n        <div className=\"tile is-parent\">\n          <article className=\"tile is-child box\">\n            <PromiseWhen date={props.date} setDate={props.setDate} time={props.time} setTime={props.setTime}/>\n          </article>\n        </div>\n      <div className=\"tile is-parent\">\n        <article className=\"tile is-child box\">\n            <PromiseWhere place={props.place} setPlace={props.setPlace}/>\n        </article>\n      </div>\n      <div className=\"tile is-parent\">\n          <article className=\"tile is-child box\">\n            <PhoneNumber phone={props.phone} setPhone={props.setPhone}/>\n          </article>\n        </div>\n    </div>\n      </div>\n      <br></br><br></br>\n      <div className=\"add-button\">\n      <AddButton />\n      </div>\n    </section>\n    </form>\n  </> \n  )\n}\n\n\nfunction YourPromises (props) {\n  const [promise, setPromise] = useState('')\n  const [date, setDate] = useState('')\n  const [time, setTime] = useState('')\n  const [place, setPlace] = useState('')\n  const [phone, setPhone] = useState('')\n  // const [submit, setSubmit] = useState(false)\n  const [isValid, setIsValid] = useState(false)\n  const [count, setCount] = useState(1)\n\n\n  // let arrayofNumbers = []\n  // for (let i = 1; i < count; i++) {\n  //   arrayofNumbers.push(count)\n  // }\n\n  let thePromiseForm\n  const theForm =<PromiseForm promise={promise} setPromise={setPromise} date={date} setDate={setDate} time={time} setTime={setTime} place={place} setPlace={setPlace} phone={phone} setPhone={setPhone} isValid={isValid} setIsValid={setIsValid}/>\n  if (isValid === true) {\n    thePromiseForm = <NextPage count={count} promise={promise} date={date} time={time} place={place} phone={phone} isValid={isValid} />\n  } else {\n    thePromiseForm = theForm\n  }\n\n  return (\n    <>\n    {thePromiseForm}\n    </>\n  )\n}\n\nexport default YourPromises;\n"]},"metadata":{},"sourceType":"module"}